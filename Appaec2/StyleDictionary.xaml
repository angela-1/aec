<ResourceDictionary x:Uid="ResourceDictionary_1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
                    xmlns:local="clr-namespace:Appaec2">
    <Style x:Uid="Style_1" x:Key="FocusVisual">
        <Setter x:Uid="Setter_1" Property="Control.Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_1">
                    <Rectangle x:Uid="Rectangle_1" Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Uid="SolidColorBrush_1" x:Key="Button.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Uid="SolidColorBrush_2" x:Key="Button.Static.Border" Color="#FFCDCDCD"/>
    <SolidColorBrush x:Uid="SolidColorBrush_3" x:Key="Button.MouseOver.Background" Color="#FF1869F5"/>
    <SolidColorBrush x:Uid="SolidColorBrush_4" x:Key="Button.MouseOver.Border" Color="#FFCDCDCD"/>
    <SolidColorBrush x:Uid="SolidColorBrush_5" x:Key="Button.Pressed.Background" Color="#FFc2c2c2"/>
    <SolidColorBrush x:Uid="SolidColorBrush_6" x:Key="Button.Pressed.Border" Color="#FFc2c2c2"/>
    <SolidColorBrush x:Uid="SolidColorBrush_7" x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Uid="SolidColorBrush_8" x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Uid="SolidColorBrush_9" x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Uid="Style_2" x:Key="BaseButton" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_2" Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter x:Uid="Setter_3" Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter x:Uid="Setter_4" Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter x:Uid="Setter_5" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_6" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_7" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_8" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_9" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_10" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type Button}">

                    <Border x:Uid="border" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3" Background="{StaticResource Button.Static.Background}" HorizontalAlignment="Stretch">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Uid="CommonStates" x:Name="CommonStates"/>
                            <VisualStateGroup x:Uid="FocusStates" x:Name="FocusStates">
                                <VisualState x:Uid="Unfocused" x:Name="Unfocused"/>
                                <VisualState x:Uid="Focused" x:Name="Focused">

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Uid="contentPresenter" x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto" Margin="0" Width="Auto"/>
                    </Border>
                    <ControlTemplate.Triggers>
                 
                        <Trigger x:Uid="Trigger_2" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_12" Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter x:Uid="Setter_13" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter x:Uid="Setter_14" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Background}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_3" Property="IsPressed" Value="true">
                            <Setter x:Uid="Setter_15" Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter x:Uid="Setter_16" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            <Setter x:Uid="Setter_17" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

                        </Trigger>
                        <Trigger x:Uid="Trigger_4" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_18" Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter x:Uid="Setter_19" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter x:Uid="Setter_20" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_3" x:Key="LeftButtonStyle" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_21" Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter x:Uid="Setter_22" Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter x:Uid="Setter_23" Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter x:Uid="Setter_24" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_25" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_26" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_27" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_28" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_29" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_3" TargetType="{x:Type Button}">
                    <Border x:Uid="Border_1" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3,0,0,3" Background="{StaticResource Button.Static.Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Uid="VisualStateGroup_1" x:Name="CommonStates"/>
                            <VisualStateGroup x:Uid="VisualStateGroup_2" x:Name="FocusStates">
                                <VisualState x:Uid="VisualState_1" x:Name="Unfocused"/>
                                <VisualState x:Uid="VisualState_2" x:Name="Focused">
                                    <Storyboard x:Uid="Storyboard_3">
                                        <ColorAnimationUsingKeyFrames x:Uid="ColorAnimationUsingKeyFrames_3" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame x:Uid="EasingColorKeyFrame_3" KeyTime="0" Value="#FFFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Uid="ContentPresenter_1" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_5" Property="IsDefaulted" Value="true">
                            <Setter x:Uid="Setter_30" Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_6" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_31" Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter x:Uid="Setter_32" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter x:Uid="Setter_33" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Background}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_7" Property="IsPressed" Value="true">
                            <Setter x:Uid="Setter_34" Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter x:Uid="Setter_35" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            <Setter x:Uid="Setter_36" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_8" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_37" Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter x:Uid="Setter_38" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter x:Uid="Setter_39" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_4" x:Key="RightButtonStyle" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_40" Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter x:Uid="Setter_41" Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter x:Uid="Setter_42" Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter x:Uid="Setter_43" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_44" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_45" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_46" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_47" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_48" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_4" TargetType="{x:Type Button}">
                    <Border x:Uid="Border_2" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="0,3,3,0" Background="{StaticResource Button.Static.Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Uid="VisualStateGroup_3" x:Name="CommonStates"/>
                            <VisualStateGroup x:Uid="VisualStateGroup_4" x:Name="FocusStates">
                                <VisualState x:Uid="VisualState_3" x:Name="Unfocused"/>
                                <VisualState x:Uid="VisualState_4" x:Name="Focused"/>
                      
                               
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Uid="ContentPresenter_2" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_9" Property="IsDefaulted" Value="true">
                            <Setter x:Uid="Setter_49" Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_10" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_50" Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter x:Uid="Setter_51" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter x:Uid="Setter_52" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Background}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_11" Property="IsPressed" Value="true">
                            <Setter x:Uid="Setter_53" Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter x:Uid="Setter_54" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            <Setter x:Uid="Setter_55" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_12" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_56" Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter x:Uid="Setter_57" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter x:Uid="Setter_58" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Uid="Style_5" x:Key="CenterButtonStyle" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_59" Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter x:Uid="Setter_60" Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter x:Uid="Setter_61" Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter x:Uid="Setter_62" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_63" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_64" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_65" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_66" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_67" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_5" TargetType="{x:Type Button}">
                    <Border x:Uid="Border_3" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="0" Background="{StaticResource Button.Static.Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Uid="VisualStateGroup_5" x:Name="CommonStates"/>
                            <VisualStateGroup x:Uid="VisualStateGroup_6" x:Name="FocusStates">
                                <VisualState x:Uid="VisualState_5" x:Name="Unfocused"/>
                                <VisualState x:Uid="VisualState_6" x:Name="Focused">
                       
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Uid="ContentPresenter_3" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_13" Property="IsDefaulted" Value="true">
                            <Setter x:Uid="Setter_68" Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_14" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_69" Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter x:Uid="Setter_70" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter x:Uid="Setter_71" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Background}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_15" Property="IsPressed" Value="true">
                            <Setter x:Uid="Setter_72" Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter x:Uid="Setter_73" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            <Setter x:Uid="Setter_74" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_16" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_75" Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter x:Uid="Setter_76" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter x:Uid="Setter_77" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Clear.Static.Background" Color="#FFCDCDCD"/>
    <Style x:Uid="Style_6" x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_78" Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter x:Uid="Setter_79" Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter x:Uid="Setter_80" Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter x:Uid="Setter_81" Property="Foreground" Value="{StaticResource Button.Static.Background}"/>
        <Setter x:Uid="Setter_82" Property="BorderThickness" Value="0"/>
        <Setter x:Uid="Setter_83" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_84" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_85" Property="Padding" Value="0"/>
        <Setter x:Uid="Setter_86" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_6" TargetType="{x:Type Button}">
                    <Border x:Uid="Border_4" x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="8" Background="{StaticResource Button.Clear.Static.Background}" Height="16" Width="16">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Uid="VisualStateGroup_7" x:Name="CommonStates"/>
                            <VisualStateGroup x:Uid="VisualStateGroup_8" x:Name="FocusStates">
                                <VisualState x:Uid="VisualState_7" x:Name="Unfocused"/>
                                <VisualState x:Uid="VisualState_8" x:Name="Focused">
                       
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Uid="ContentPresenter_4" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_17" Property="IsDefaulted" Value="true">
                            <Setter x:Uid="Setter_87" Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_18" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_88" Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                           <!--  <Setter x:Uid="Setter_89" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/> -->
                        </Trigger>
                        <Trigger x:Uid="Trigger_19" Property="IsPressed" Value="true">
                            <Setter x:Uid="Setter_90" Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                          <!--   <Setter x:Uid="Setter_91" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/> -->
                            <Setter x:Uid="Setter_92" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

                        </Trigger>
                        <Trigger x:Uid="Trigger_20" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_93" Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter x:Uid="Setter_94" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter x:Uid="Setter_95" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Close.Static.Background" Color="#FFFF6052"/>
    <SolidColorBrush x:Key="Button.Close.Static.Border" Color="#FFff3a30"/>
    <SolidColorBrush x:Key="Button.Min.Static.Background" Color="#FF15CC37"/>
    <SolidColorBrush x:Key="Button.Min.Static.Border" Color="#FF17CC37"/>

    <SolidColorBrush x:Key="Button.Close.Press.Background" Color="#FFff3a30"/>
    <SolidColorBrush x:Key="Button.Close.Press.Border" Color="#FFff3a30"/>
    <SolidColorBrush x:Key="Button.Min.Press.Background" Color="#FF17bf36"/>
    <SolidColorBrush x:Key="Button.Min.Press.Border" Color="#FF17bf36"/>
    <Style x:Uid="Style_7" x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter x:Uid="Setter_96" Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter x:Uid="Setter_97" Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter x:Uid="Setter_98" Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter x:Uid="Setter_99" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_100" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_101" Property="HorizontalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_102" Property="VerticalContentAlignment" Value="Center"/>
        <Setter x:Uid="Setter_103" Property="Padding" Value="1"/>
        <Setter x:Uid="Setter_104" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_7" TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Uid="Storyboard_7" x:Key="OnMouseEnter1"/>
                    </ControlTemplate.Resources>
                    <Border x:Uid="Border_5" x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="10" Background="{StaticResource Button.Close.Static.Background}" BorderBrush="{StaticResource Button.Close.Static.Border}" Margin="0" d:LayoutOverrides="HorizontalAlignment">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Uid="VisualStateGroup_9" x:Name="CommonStates"/>
                            <VisualStateGroup x:Uid="VisualStateGroup_10" x:Name="FocusStates">
                                <VisualState x:Uid="VisualState_9" x:Name="Unfocused"/>
                                <VisualState x:Uid="VisualState_10" x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Uid="ContentPresenter_5" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_21" Property="IsDefaulted" Value="true">
                            <Setter x:Uid="Setter_105" Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_22" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_106" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Background}"/>
                            <Setter x:Uid="Setter_107" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Close.Press.Border}"/>
                            <Setter x:Uid="Setter_108" Property="Background" TargetName="border" Value="{StaticResource Button.Close.Press.Background}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_23" Property="IsPressed" Value="true">
                            <Setter x:Uid="Setter_109" Property="Background" TargetName="border" Value="{StaticResource Button.Close.Press.Background}"/>
                            <Setter x:Uid="Setter_110" Property="BorderBrush" TargetName="border" Value="White"/>
                            <Setter x:Uid="Setter_111" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

                        </Trigger>
                        <Trigger x:Uid="Trigger_24" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_112" Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter x:Uid="Setter_113" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter x:Uid="Setter_114" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <Style x:Key="MinButtonStyle" x:Uid="Style_7" TargetType="{x:Type Button}">
            <Setter x:Uid="Setter_96" Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter x:Uid="Setter_97" Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter x:Uid="Setter_98" Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter x:Uid="Setter_99" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter x:Uid="Setter_100" Property="BorderThickness" Value="1"/>
            <Setter x:Uid="Setter_101" Property="HorizontalContentAlignment" Value="Center"/>
            <Setter x:Uid="Setter_102" Property="VerticalContentAlignment" Value="Center"/>
            <Setter x:Uid="Setter_103" Property="Padding" Value="1"/>
            <Setter x:Uid="Setter_104" Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Uid="ControlTemplate_7" TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Uid="Storyboard_7" x:Key="OnMouseEnter1"/>
                        </ControlTemplate.Resources>
                        <Border x:Uid="Border_5" x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="10" Background="{StaticResource Button.Min.Static.Background}" BorderBrush="{DynamicResource Button.Min.Static.Border}" Margin="0" d:LayoutOverrides="HorizontalAlignment">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Uid="VisualStateGroup_9" x:Name="CommonStates"/>
                                <VisualStateGroup x:Uid="VisualStateGroup_10" x:Name="FocusStates">
                                    <VisualState x:Uid="VisualState_9" x:Name="Unfocused"/>
                                    <VisualState x:Uid="VisualState_10" x:Name="Focused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Uid="ContentPresenter_5" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger x:Uid="Trigger_22" Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Min.Press.Border}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Min.Press.Background}"/>

                        </Trigger>
                            <Trigger x:Uid="Trigger_23" Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Min.Press.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>


                        </Trigger>
                            <Trigger x:Uid="Trigger_24" Property="IsEnabled" Value="false">
                                <Setter x:Uid="Setter_112" Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter x:Uid="Setter_113" Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter x:Uid="Setter_114" Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <SolidColorBrush x:Uid="SolidColorBrush_10" x:Key="TextBox.Static.Border" Color="#FF68717A"/>
    <SolidColorBrush x:Uid="SolidColorBrush_11" x:Key="TextBox.MouseOver.Border" Color="#FF1869f5"/>
    <SolidColorBrush x:Uid="SolidColorBrush_12" x:Key="TextBox.Focus.Border" Color="#FF1869f5"/>

    <Style x:Uid="Style_8" x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter x:Uid="Setter_115" Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter x:Uid="Setter_116" Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter x:Uid="Setter_117" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter x:Uid="Setter_118" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_119" Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter x:Uid="Setter_120" Property="HorizontalContentAlignment" Value="Left"/>
        <Setter x:Uid="Setter_121" Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter x:Uid="Setter_122" Property="AllowDrop" Value="true"/>
        <Setter x:Uid="Setter_123" Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter x:Uid="Setter_124" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_125" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_8" TargetType="{x:Type TextBox}">
                    <Border x:Uid="Border_6" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="3">
                        <ScrollViewer x:Uid="PART_ContentHost" x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_25" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_126" Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_26" Property="IsMouseOver" Value="true">
                            <Setter x:Uid="Setter_127" Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_27" Property="IsKeyboardFocused" Value="true">
                            <Setter x:Uid="Setter_128" Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger x:Uid="MultiTrigger_1">
                <MultiTrigger.Conditions>
                    <Condition x:Uid="Condition_1" Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition x:Uid="Condition_2" Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter x:Uid="Setter_129" Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Uid="DataTemplate_1" x:Key="ListBoxDataTemplate">
        <Grid x:Uid="Grid_1">
            <Grid.RowDefinitions>
                <RowDefinition x:Uid="RowDefinition_1"/>
                <RowDefinition x:Uid="RowDefinition_2"/>
            </Grid.RowDefinitions>
            <TextBlock x:Uid="textBlock" x:Name="textBlock" TextWrapping="Wrap" FontWeight="Bold" Text="{Binding Path=Tag}" d:LayoutOverrides="Width, Height" FontSize="16"/>
            <TextBlock x:Uid="textBlock1" x:Name="textBlock1" TextWrapping="Wrap" Text="{Binding Path=Category}" d:LayoutOverrides="Width, Height" Grid.Row="1"/>
        </Grid>
    </DataTemplate>
    <SolidColorBrush x:Key="ListBoxItem.Static.Background" Color="#FFe0e0e0"/>
    <SolidColorBrush x:Key="ListBoxItem.Static.Border" Color="#FFe0e0e0"/>
        <SolidColorBrush x:Key="ListBoxItem.Selected.Background" Color="#FF1869f5"/>
    <SolidColorBrush x:Key="ListBoxItem.Selected.Border" Color="#FF1869f5"/>
            <SolidColorBrush x:Key="ListBoxItem.Selected.Active.Background" Color="#FF0069c6"/>
    <SolidColorBrush x:Key="ListBoxItem.Selected.Active.Border" Color="#FF0069c6"/>
    <Style x:Uid="Style_9" x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter x:Uid="Setter_130" Property="SnapsToDevicePixels" Value="True"/>
        <Setter x:Uid="Setter_131" Property="Padding" Value="4,1"/>
        <Setter x:Uid="Setter_132" Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_133" Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter x:Uid="Setter_134" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_135" Property="BorderBrush" Value="Transparent"/>
        <Setter x:Uid="Setter_136" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_137" Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter x:Uid="Setter_138" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_9" TargetType="{x:Type ListBoxItem}">
                    <Border x:Uid="Bd" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{StaticResource ListBoxItem.Static.Background}" CornerRadius="3" Margin="5,5,5,0">
                        <ContentPresenter x:Uid="ContentPresenter_6" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger x:Uid="MultiTrigger_3">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_4" Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition x:Uid="Condition_5" Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_142" Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBoxItem.Selected.Border}"/>
                            <Setter x:Uid="Setter_143" Property="Background" TargetName="Bd" Value="{StaticResource ListBoxItem.Selected.Background}"/>
                            <Setter x:Uid="Setter_141" Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ListBoxItem.Static.Background}"/>

                        </MultiTrigger>
                        <MultiTrigger x:Uid="MultiTrigger_4">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_6" Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition x:Uid="Condition_7" Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_144" Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ListBoxItem.Selected.Active.Background}"/>
                            <Setter x:Uid="Setter_145" Property="Background" TargetName="Bd" Value="{DynamicResource ListBoxItem.Selected.Active.Border}"/>
                            <Setter x:Uid="Setter_141" Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ListBoxItem.Static.Background}"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_28" Property="IsEnabled" Value="False">
                            <Setter x:Uid="Setter_146" Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_2">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_3" Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_139" Property="Background" TargetName="Bd" Value="{DynamicResource ListBoxItem.Selected.Active.Background}"/>
                            <Setter x:Uid="Setter_140" Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ListBoxItem.Selected.Active.Border}"/>
                            <Setter x:Uid="Setter_141" Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ListBoxItem.Static.Background}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
 
    </Style>
   
   
    <SolidColorBrush x:Key="ToggleButton.MouseOver.Background" Color="#FF1869F5"/>
        <SolidColorBrush x:Key="ToggleButton.MouseOver.Foreground" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ToggleButton.MouseOver.Border" Color="#FF1869F5"/>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3" Padding="2,0">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButton.MouseOver.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ToggleButton.MouseOver.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF2F2F2" Offset="0.0"/>
        <GradientStop Color="#FFF2F2F2" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FF68717A"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF0069C6" Offset="0.0"/>
        <GradientStop Color="#FF0069C6" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF68717A"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF68717A"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF0069C6" Offset="0.0"/>
        <GradientStop Color="#FF0069C6" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF68717A"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFc2c2c2" Offset="0.0"/>
        <GradientStop Color="#FFc2c2c2" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FFc2c2c2"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF68717A"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF0069C6" Offset="0.0"/>
        <GradientStop Color="#FF0069C6" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF0069C6"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFc2c2c2"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>

                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>

                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>

                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#2E0080FF"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#5426A0DA"/>
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA"/>
    <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF0069C6"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF0069C6"/>
                            <Setter Property="OpacityMask" TargetName="contentPresenter" Value="{x:Null}"/>
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FFFFFFFF"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF1869F5"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF1869F5"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF0069C6"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF0069C6"/>
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FFFFFFFF"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF1869F5"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF1869F5"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FF0069C6"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF0069C6"/>
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FFFFFFFF"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SigninButtonStyle" TargetType="{x:Type Button}" x:Uid="Style_7">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" x:Uid="Setter_96"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" x:Uid="Setter_97"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" x:Uid="Setter_98"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" x:Uid="Setter_99"/>
        <Setter Property="BorderThickness" Value="1" x:Uid="Setter_100"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" x:Uid="Setter_101"/>
        <Setter Property="VerticalContentAlignment" Value="Center" x:Uid="Setter_102"/>
        <Setter Property="Padding" Value="1" x:Uid="Setter_103"/>
        <Setter Property="Template" x:Uid="Setter_104">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" x:Uid="ControlTemplate_7">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1" x:Uid="Storyboard_7"/>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" BorderBrush="{DynamicResource Button.MouseOver.Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource Button.MouseOver.Background}" CornerRadius="15" Margin="0" SnapsToDevicePixels="true" d:LayoutOverrides="HorizontalAlignment" x:Uid="Border_5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates" x:Uid="VisualStateGroup_9"/>
                            <VisualStateGroup x:Name="FocusStates" x:Uid="VisualStateGroup_10">
                                <VisualState x:Name="Unfocused" x:Uid="VisualState_9"/>
                                <VisualState x:Name="Focused" x:Uid="VisualState_10"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" x:Uid="ContentPresenter_5"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" x:Uid="Trigger_22">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ListBoxItem.Selected.Active.Background}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ListBoxItem.Selected.Active.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" x:Uid="Trigger_23">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ListBoxItem.Selected.Active.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" x:Uid="Trigger_24">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" x:Uid="Setter_112"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" x:Uid="Setter_113"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}" x:Uid="Setter_114"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>